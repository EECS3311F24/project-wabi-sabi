swagger: "2.0"
info:
  title: "API Documentation"
  description: "Wabisabi APIs"
  version: "1.0.0"
basePath: "/"
schemes:
  - "http"
paths:
  /signup:
    post:
      summary: "User sign-up"
      description: "Register a new user account."
      parameters:
        - in: "body"
          name: "body"
          description: "User sign-up data"
          required: true
          schema:
            type: "object"
            properties:
              email:
                type: "string"
              password:
                type: "string"
      responses:
        201:
          description: "User registered successfully"
        400:
          description: "Email is already registered"
  /login:
    post:
      summary: "User login"
      description: "Log in a user and return a JWT token."
      parameters:
        - in: "body"
          name: "body"
          description: "User login data"
          required: true
          schema:
            type: "object"
            properties:
              email:
                type: "string"
              password:
                type: "string"
      responses:
        200:
          description: "Successful login, JWT token returned"
        401:
          description: "Invalid email or password"
  /task/<task_id>:
    delete:
      summary: "Delete task object"
      description: "Delete a new task object in the task collection, based on the passed in task_id and the data in the JSON body"
      Authorization: Bearer <token>
      parameters:
        - in: "header"
          name: "Authorization"
          description: "Bearer token for authentication"
          required: true
          schema:
            type: "string"
            example: "Bearer "
      responses:
        201:
          description: "Task removed successfully"
        500:
          description: "Task not removed successfully (includes error message)"
        401:
          description: "Invalid jwt session token"
  /task/<task_id>:
    patch:
      summary: "Edit task object"
      description: "Edits a task object in the task collection, based on the passed in task_id and the data in the JSON body"
      Authorization: Bearer <token>
      parameters:
        - in: "header"
          name: "Authorization"
          description: "Bearer token for authentication"
          required: true
          schema:
            type: "string"
            example: "Bearer "
        - in: "body"
          name: "body"
          description: "Task data"
          required: true
          schema:
            type: "object"
            properties:
              text:
                type: "string"
      responses:
        201:
          description: "Task created successfully"
        500:
          description: "Task not created successfully (includes error message)"
        401:
          description: "Invalid jwt session token"
  /task:
    post:
      summary: "Add task object"
      description: "Adds a new task object to the task collection, as well as adds it to the user who requested"
      Authorization: Bearer <token>
      parameters:
        - in: "header"
          name: "Authorization"
          description: "Bearer token for authentication"
          required: true
          schema:
            type: "string"
            example: "Bearer "
        - in: "body"
          name: "body"
          description: "Task data"
          required: true
          schema:
            type: "object"
            properties:
              text:
                type: "string"
      responses:
        201:
          description: "Task created successfully"
        500:
          description: "Task not created successfully (includes error message)"
        401:
          description: "Invalid jwt session token"
  /task:
    get:
      summary: "Get list of a users tasks"
      Authorization: Bearer <token>
      description: "Adds a new task object to the task collection, as well as adds it t"
      parameters:
        - in: "header"
          name: "Authorization"
          description: "Bearer token for authentication"
          required: true
          schema:
            type: "string"
            example: "Bearer "
        # - in: "body"
        #   name: "body"
        #   description: "Task data"
        #   required: true
        #   schema:
        #     type: "object"
        #     properties:
        #       text:
        #         type: "string"
      responses:
        201:
          description: "Task created successfully"
          schema:
            type: array
            properties:
            id:
              type: "ObjectId"
            is_sub_task:
              type: "boolean"
            text:
              type: "string"
            due_date:
              type: "Date"
            tag:
              type: "Tag"
            status:
              type: "String"

        500:
          description: "Error with getting Tasks"
        401:
          description: "Invalid jwt session token"
  /task:
    patch:
      summary: "Edit user task"
      description: "Update the status of a specific task for the authenticated user."
      parameters:
        - in: "header"
          name: "Authorization"
          description: "Bearer token for authentication"
          required: true
          schema:
            type: "string"
            example: "Bearer "
        - in: "body"
          name: "body"
          description: "Task edit data"
          required: true
          schema:
            type: "object"
            properties:
              task_id:
                type: "string"
                description: "ID of the task to edit"
              status:
                type: "string"
                description: "New status for the task"
            required:
              - task_id
              - status
      responses:
        201:
          description: "Task edited successfully"
        401:
          description: "Invalid jwt session token"
        500:
          description: "Error occurred during task editing"
  /task:
    delete:
      summary: "Delete user task"
      description: "Delete a specific task for the authenticated user."
      parameters:
        - in: "header"
          name: "Authorization"
          description: "Bearer token for authentication"
          required: true
          schema:
            type: "string"
            example: "Bearer "
        - in: "body"
          name: "body"
          description: "Task delete data"
          required: true
          schema:
            type: "object"
            properties:
              task_id:
                type: "string"
                description: "ID of the task to delete"
            required:
              - task_id
      responses:
        201:
          description: "Task deleted successfully"
        401:
          description: "Invalid jwt session token"
        500:
          description: "Error occurred during task deletion"
  /study:
    post:
      summary: "Add a study session"
      description: "Creates a new study session record for the authenticated user."
      parameters:
        - in: "header"
          name: "Authorization"
          description: "Bearer token for authentication"
          required: true
          schema:
            type: "string"
            example: "Bearer "
        - in: "body"
          name: "body"
          description: "Study session data"
          required: true
          schema:
            type: "object"
            properties:
              start_time:
                type: "string"
                description: "Start time of the study session in ISO format"
                example: "2024-11-03T10:00:00Z"
              end_time:
                type: "string"
                description: "End time of the study session in ISO format"
                example: "2024-11-03T11:00:00Z"
            required:
              - start_time
              - end_time
      responses:
        201:
          description: "Study session recorded successfully"
        401:
          description: "Invalid jwt session token"
        500:
          description: "Error occurred while adding study session"
   /study:
     get:
       summary: "Get all study sessions"
       description: "Retrieves all study sessions for the authenticated user."
       parameters:
         - in: "header"
           name: "Authorization"
           description: "Bearer token for authentication"
           required: true
           schema:
             type: "string"
             example: "Bearer "
       responses:
         201:
           description: "List of study sessions retrieved successfully"
           content:
             application/json:
               schema:
                 type: "array"
                 items:
                   type: "object"
                   properties:
                     start_time:
                       type: "string"
                       description: "Start time of the study session"
                       example: "2024-11-03T10:00:00Z"
                     end_time:
                       type: "string"
                       description: "End time of the study session"
                       example: "2024-11-03T11:00:00Z"
         401:
           description: "Invalid jwt session token"
         500:
           description: "Error occurred while retrieving study sessions"

  /tag:
    post:
      summary: "Add tag object"
      description: "Adds a new tag object to the tag collection, as well as adds it to the user who requested"
      Authorization: Bearer <token>
      parameters:
        - in: "header"
          name: "Authorization"
          description: "Bearer token for authentication"
          required: true
          schema:
            type: "string"
            example: "Bearer "
        - in: "body"
          name: "body"
          description: "Tag data"
          required: true
          schema:
            type: "object"
            properties:
              text:
                type: "string"
      responses:
        201:
          description: "Tag created successfully"
        500:
          description: "Tag not created successfully (includes error message)"
        401:
          description: "Invalid jwt session token"

  /tag:
    get:
      summary: "Add tag object"
      description: "get all of a user's tags"
      Authorization: Bearer <token>
      parameters:
        - in: "header"
          name: "Authorization"
          description: "Bearer token for authentication"
          required: true
          schema:
            type: "string"
            example: "Bearer "
      responses:
        201:
          description: "Tags returned successfully"
        500:
          description: "Tag not returned successfully (includes error message)"
        401:
          description: "Invalid jwt session token"

  /tag/<tag_id>:
    patch:
      summary: "Edit tag object"
      description: "Edits a tag object in the tag collection"
      Authorization: Bearer <token>
      parameters:
        - in: "header"
          name: "Authorization"
          description: "Bearer token for authentication"
          required: true
          schema:
            type: "string"
            example: "Bearer "
        - in: "body"
          name: "body"
          description: "Tag data"
          required: true
          schema:
            type: "object"
            properties:
              text:
                type: "string"
      responses:
        201:
          description: "Tag edited successfully"
        500:
          description: "Tag not edited successfully (includes error message)"
        401:
          description: "Invalid jwt session token"

  /tag/<tag_id>:
    delete:
      summary: "Delete tag object"
      description: "Delete a tag object in the tag collection"
      Authorization: Bearer <token>
      parameters:
        - in: "header"
          name: "Authorization"
          description: "Bearer token for authentication"
          required: true
          schema:
            type: "string"
            example: "Bearer "
      responses:
        201:
          description: "Tag deleted successfully"
        500:
          description: "Tag not deleted successfully (includes error message)"
        401:
          description: "Invalid jwt session token"